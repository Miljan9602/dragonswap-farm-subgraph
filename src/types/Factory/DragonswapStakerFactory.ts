// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Deployed extends ethereum.Event {
  get params(): Deployed__Params {
    return new Deployed__Params(this);
  }
}

export class Deployed__Params {
  _event: Deployed;

  constructor(event: Deployed) {
    this._event = event;
  }

  get instance(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get impType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get rewardToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get boosterToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get rewardPerSecond(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get startTimestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class ImplementationSet extends ethereum.Event {
  get params(): ImplementationSet__Params {
    return new ImplementationSet__Params(this);
  }
}

export class ImplementationSet__Params {
  _event: ImplementationSet;

  constructor(event: ImplementationSet) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get impType(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DragonswapStakerFactory extends ethereum.SmartContract {
  static bind(address: Address): DragonswapStakerFactory {
    return new DragonswapStakerFactory("DragonswapStakerFactory", address);
  }

  deploymentToImplType(param0: Address): i32 {
    let result = super.call(
      "deploymentToImplType",
      "deploymentToImplType(address):(uint8)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toI32();
  }

  try_deploymentToImplType(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "deploymentToImplType",
      "deploymentToImplType(address):(uint8)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  deployments(param0: BigInt): Address {
    let result = super.call("deployments", "deployments(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return result[0].toAddress();
  }

  try_deployments(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployments",
      "deployments(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllDeployments(startIndex: BigInt, endIndex: BigInt): Array<Address> {
    let result = super.call(
      "getAllDeployments",
      "getAllDeployments(uint256,uint256):(address[])",
      [
        ethereum.Value.fromUnsignedBigInt(startIndex),
        ethereum.Value.fromUnsignedBigInt(endIndex),
      ],
    );

    return result[0].toAddressArray();
  }

  try_getAllDeployments(
    startIndex: BigInt,
    endIndex: BigInt,
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAllDeployments",
      "getAllDeployments(uint256,uint256):(address[])",
      [
        ethereum.Value.fromUnsignedBigInt(startIndex),
        ethereum.Value.fromUnsignedBigInt(endIndex),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getLatestDeployment(): Address {
    let result = super.call(
      "getLatestDeployment",
      "getLatestDeployment():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getLatestDeployment(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getLatestDeployment",
      "getLatestDeployment():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  implBoosted(): Address {
    let result = super.call("implBoosted", "implBoosted():(address)", []);

    return result[0].toAddress();
  }

  try_implBoosted(): ethereum.CallResult<Address> {
    let result = super.tryCall("implBoosted", "implBoosted():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  implClassic(): Address {
    let result = super.call("implClassic", "implClassic():(address)", []);

    return result[0].toAddress();
  }

  try_implClassic(): ethereum.CallResult<Address> {
    let result = super.tryCall("implClassic", "implClassic():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isDeployedThroughFactory(deployment: Address): boolean {
    let result = super.call(
      "isDeployedThroughFactory",
      "isDeployedThroughFactory(address):(bool)",
      [ethereum.Value.fromAddress(deployment)],
    );

    return result[0].toBoolean();
  }

  try_isDeployedThroughFactory(
    deployment: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isDeployedThroughFactory",
      "isDeployedThroughFactory(address):(bool)",
      [ethereum.Value.fromAddress(deployment)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  noOfDeployments(): BigInt {
    let result = super.call(
      "noOfDeployments",
      "noOfDeployments():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_noOfDeployments(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "noOfDeployments",
      "noOfDeployments():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get owner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeployBoostedCall extends ethereum.Call {
  get inputs(): DeployBoostedCall__Inputs {
    return new DeployBoostedCall__Inputs(this);
  }

  get outputs(): DeployBoostedCall__Outputs {
    return new DeployBoostedCall__Outputs(this);
  }
}

export class DeployBoostedCall__Inputs {
  _call: DeployBoostedCall;

  constructor(call: DeployBoostedCall) {
    this._call = call;
  }

  get rewardToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get boosterToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get rewardPerSecond(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get startTimestamp(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DeployBoostedCall__Outputs {
  _call: DeployBoostedCall;

  constructor(call: DeployBoostedCall) {
    this._call = call;
  }
}

export class DeployClassicCall extends ethereum.Call {
  get inputs(): DeployClassicCall__Inputs {
    return new DeployClassicCall__Inputs(this);
  }

  get outputs(): DeployClassicCall__Outputs {
    return new DeployClassicCall__Outputs(this);
  }
}

export class DeployClassicCall__Inputs {
  _call: DeployClassicCall;

  constructor(call: DeployClassicCall) {
    this._call = call;
  }

  get rewardToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get rewardPerSecond(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get startTimestamp(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DeployClassicCall__Outputs {
  _call: DeployClassicCall;

  constructor(call: DeployClassicCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetImplementationBoostedCall extends ethereum.Call {
  get inputs(): SetImplementationBoostedCall__Inputs {
    return new SetImplementationBoostedCall__Inputs(this);
  }

  get outputs(): SetImplementationBoostedCall__Outputs {
    return new SetImplementationBoostedCall__Outputs(this);
  }
}

export class SetImplementationBoostedCall__Inputs {
  _call: SetImplementationBoostedCall;

  constructor(call: SetImplementationBoostedCall) {
    this._call = call;
  }

  get implementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetImplementationBoostedCall__Outputs {
  _call: SetImplementationBoostedCall;

  constructor(call: SetImplementationBoostedCall) {
    this._call = call;
  }
}

export class SetImplementationClassicCall extends ethereum.Call {
  get inputs(): SetImplementationClassicCall__Inputs {
    return new SetImplementationClassicCall__Inputs(this);
  }

  get outputs(): SetImplementationClassicCall__Outputs {
    return new SetImplementationClassicCall__Outputs(this);
  }
}

export class SetImplementationClassicCall__Inputs {
  _call: SetImplementationClassicCall;

  constructor(call: SetImplementationClassicCall) {
    this._call = call;
  }

  get implementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetImplementationClassicCall__Outputs {
  _call: SetImplementationClassicCall;

  constructor(call: SetImplementationClassicCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
